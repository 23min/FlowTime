@inherits LayoutComponentBase
@using MudBlazor
@inject FlowTime.UI.Services.ThemeService Theme
@inject FlowTime.UI.Services.PreferencesService Prefs
@inject FlowTime.UI.Services.FeatureFlagService Flags

<MudThemeProvider Theme="@Theme.CurrentTheme" IsDarkMode="@Theme.IsDark" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />

<MudLayout>
    <MudAppBar Elevation="1" Color="Color.Default" Class="appbar-surface" Dense="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
            OnClick="ToggleDrawer" />
        <MudText Typo="Typo.h6">FlowTime</MudText>
        <MudSpacer />
        <MudChip T="string" Color="@(useSim? Color.Warning: Color.Success)" Variant="Variant.Outlined"
            Size="Size.Small">@(useSim ? "Sim" : "API")</MudChip>
        <MudSwitch T="bool" Value="useSim" ValueChanged="OnUseSimChanged" Color="Color.Primary" Class="ml-2 mr-2" />
        <MudIconButton Icon="@(Theme.IsDark? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)"
            Color="Color.Inherit" OnClick="ToggleDarkAsync" />
        <MudButton Variant="Variant.Outlined" Color="Color.Inherit" Href="https://github.com/23min/flowtime"
            Target="_blank">GitHub</MudButton>
    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" Elevation="1" ClipMode="DrawerClipMode.Always"
        Variant="DrawerVariant.Responsive" Class="drawer-surface">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Navigation</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavLink Href="/" Icon="@Icons.Material.Filled.Home" Match="NavLinkMatch.All">Home</MudNavLink>
            <MudNavLink Href="/nodes" Icon="@Icons.Material.Filled.AccountTree">Nodes</MudNavLink>
            <MudNavLink Href="/api-demo" Icon="@Icons.Material.Filled.Api">API Demo</MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False" Class="pa-4 main-container">
            @Body
        </MudContainer>
    </MudMainContent>
    <div class="pa-4 mud-text-caption" style="opacity:.55;">
        FlowTime demo UI · Theme: @(Theme.IsDark ? "Dark" : "Light")
    </div>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private bool useSim;
    void ToggleDrawer() => _drawerOpen = !_drawerOpen;
    [Inject] IJSRuntime JS { get; set; } = default!;
    async Task ToggleDarkAsync()
    {
        await Theme.EnsureLoadedAsync();
        await Theme.ToggleAsync();
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        await Task.WhenAll(Flags.EnsureLoadedAsync(), Theme.EnsureLoadedAsync(), Prefs.EnsureLoadedAsync());
        useSim = Flags.UseSimulation;
        Flags.Changed += OnFlagsChanged;
    }
    private async void OnFlagsChanged()
    {
        useSim = Flags.UseSimulation;
        await InvokeAsync(StateHasChanged);
    }
    private async Task OnUseSimChanged(bool value)
    {
        await Flags.SetUseSimulationAsync(value);
    }
    public void Dispose() => Flags.Changed -= OnFlagsChanged;
}
